{"version":3,"file":"cloudinary-angular-5.x.js.map","sources":["ng://@cloudinary/angular-5.x/lib/cloudinary.service.ts","ng://@cloudinary/angular-5.x/lib/cloudinary-transformation.directive.ts","ng://@cloudinary/angular-5.x/lib/constants.ts","ng://@cloudinary/angular-5.x/lib/cloudinary-placeholder.component.ts","ng://@cloudinary/angular-5.x/lib/cloudinary-image.component.ts","ng://@cloudinary/angular-5.x/lib/cloudinary-video.component.ts","ng://@cloudinary/angular-5.x/lib/cloudinary-image-source.directive.ts","ng://@cloudinary/angular-5.x/lib/cloudinary-background-image.directive.ts","ng://@cloudinary/angular-5.x/lib/cloudinary-lazy-load.directive.ts","ng://@cloudinary/angular-5.x/lib/cloudinary.module.ts"],"sourcesContent":["import { QueryList } from '@angular/core';\nimport CloudinaryConfiguration from './cloudinary-configuration.class';\nimport { CloudinaryTransformationDirective } from './cloudinary-transformation.directive';\n\n/**\n * Returns true if the given string begins with a left curly brace and ends with a right curly brace, e.g.\n * \"{asdas d}\" will return true, \"asdasd}\" will return false.\n *\n * this function does not validate the correctness of the string content other than the first and last character\n * @param str\n * @returns boolean\n */\nconst isJsonLikeString = function (str: any): boolean {\n  // [\\s\\S] allows the string to contain new lines\n  return str && typeof str === 'string' && (str.trim().match(/^{[\\s\\S]*?}$/) !== null);\n};\n\nconst isNamedNodeMap = function (obj: any): boolean {\n  return obj && (obj.constructor.name === 'NamedNodeMap' || obj instanceof NamedNodeMap);\n};\n\nconst namedNodeMapToObject = function (source: NamedNodeMap): any {\n  let target = {};\n  Object.keys(source).forEach(index => {\n    const name = source[index].name;\n    const value = source[index].value;\n    target[name] = value;\n  });\n  return target;\n};\n\nconst transformKeyNames = function (obj: any): any {\n  let _obj = obj;\n  if (isJsonLikeString(obj)) {\n    // Given attribute value is in the form of a JSON object -\n    // Transforms the string into an object, as the Javascript API expects\n    _obj = JSON.parse(obj);\n  } else if (isNamedNodeMap(obj)) {\n    _obj = namedNodeMapToObject(obj);\n  }\n\n  if (Array.isArray(_obj)) {\n    // Transform all the array values (e.g. transformation array)\n    _obj = _obj.map(currentValue => {\n      return transformKeyNames(currentValue);\n    });\n  } else if (typeof _obj === 'object') {\n    Object.keys(_obj).forEach(key => {\n      // Replace the key name with the snake_case\n      // Then strip cld prefix if it exists (with an optional dash or underscore)\n      const kebabKey = key.replace(/-/g, '_').toLocaleLowerCase().replace(/^cld(-|_)?/, '');\n      const kebabValue = transformKeyNames(_obj[key]);\n      delete _obj[key];\n      _obj[kebabKey] = kebabValue;\n    });\n  }\n  return _obj;\n};\n\nexport class Cloudinary {\n  _cloudinaryInstance: any;\n\n  constructor(cloudinaryJsLib: any, configuration: CloudinaryConfiguration) {\n    // Cloudinary JS already clones the given configuration so no need to clone it here too\n    if (cloudinaryJsLib.CloudinaryJQuery) {\n      this._cloudinaryInstance = new cloudinaryJsLib.CloudinaryJQuery(configuration);\n    } else {\n      this._cloudinaryInstance = new cloudinaryJsLib.Cloudinary(configuration);\n    }\n  }\n\n  get cloudinaryInstance(): any {\n    return this._cloudinaryInstance;\n  }\n\n  config() {\n    return this._cloudinaryInstance.config();\n  }\n\n  url(...parameters): string {\n    return this._cloudinaryInstance.url(...parameters);\n  }\n\n  imageTag(...parameters): any {\n    return this._cloudinaryInstance.imageTag(...parameters);\n  }\n\n  videoTag(...parameters): any {\n    return this._cloudinaryInstance.videoTag(...parameters);\n  }\n\n  responsive(img: HTMLImageElement, options: any): void {\n    // Cloudinary underlying JS library will handle responsive behavior\n    this._cloudinaryInstance.cloudinary_update(img, options);\n    this._cloudinaryInstance.responsive(options, false);\n  }\n\n\n  /**\n   * Transforms a set of attributes and chained transformations to an options object that can be consumed by Cloudinary JS API\n   * @param attributes HTML element attributes\n   * @param childTransformations QueryList with the element's <cl-transformation> children for chained transformations\n   * @param cloudinary Cloudinary service\n   * @returns An options object that can be consumed by Cloudinary JS API\n   */\n  toCloudinaryAttributes(attributes: NamedNodeMap,\n    childTransformations?: QueryList<CloudinaryTransformationDirective>): any {\n    const options = transformKeyNames(attributes);\n\n    // Add chained transformations\n    if (childTransformations && childTransformations.length > 0) {\n      options.transformation = [];\n      // Support chained transformations\n      childTransformations.forEach(transformation => {\n        options.transformation.push(this.toCloudinaryAttributes(transformation.getAttributes()));\n      });\n    }\n\n    // Add responsiveness\n    if (options.responsive === '' || options.responsive === 'true' || options.responsive === true) {\n      options.responsive = true;\n    }\n    return options;\n\n  };\n}\n\n/* Return a provider object that creates our configurable service */\nexport function provideCloudinary(cloudinaryJsLib: any, configuration: CloudinaryConfiguration) {\n  return { provide: Cloudinary, useFactory: () => new Cloudinary(cloudinaryJsLib, configuration) };\n};\n\nconst isBrowser = function (): boolean {\n  return typeof window !== 'undefined';\n}\n\n// For unit tests\nexport { isJsonLikeString, isNamedNodeMap, transformKeyNames, namedNodeMapToObject, isBrowser };\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: 'cl-transformation'\n})\nexport class CloudinaryTransformationDirective {\n\n  constructor(private el: ElementRef) {\n  }\n\n  getAttributes(): NamedNodeMap {\n    return this.el.nativeElement.attributes;\n  }\n}\n\n","export const accessibilityEffect = {\n  'darkmode': {effect: 'tint:75:black'},\n  'brightmode': {effect: 'tint:50:white'},\n  'monochrome': {effect: 'grayscale'},\n  'colorblind': {effect: 'assist_colorblind'}\n}\n\nexport const predominantColorTransformPxl = [\n  {width: 'iw_div_2', aspect_ratio: 1, crop: 'pad', background: 'auto'},\n  {crop: 'crop', width: 1, height: 1, gravity: 'north_east'},\n  {fetch_format: 'auto', quality: 'auto'}];\n\nexport const predominantColorTransform  = [\n  {width: 'iw_div_2', aspect_ratio: 1, crop: 'pad', background: 'auto'},\n  {crop: 'crop', width: 10, height: 10, gravity: 'north_east'},\n  {width: 'iw', height: 'ih', crop: 'fill'},\n  {fetch_format: 'auto', quality: 'auto'}];\n\nexport const placeholderImageOptions = {\n  'vectorize': {effect: 'vectorize', quality: 1},\n  'pixelate': {effect: 'pixelate', quality: 1, fetch_format: 'auto'},\n  'blur': {effect: 'blur:2000', quality: 1, fetch_format: 'auto'},\n  'predominant-color': predominantColorTransform\n};\n","import {\n  AfterContentChecked,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport {Cloudinary} from './cloudinary.service';\nimport { placeholderImageOptions, predominantColorTransformPxl } from './constants';\n\n@Component({\n  selector: 'cl-placeholder',\n  template: `<img [src]=\"this.placeholderImg\" [style.width.px]=\"this.itemWidth\" [style.height.px]=\"this.itemHeight\">`\n  ,\n})\nexport class CloudinaryPlaceHolder implements AfterContentChecked {\n  @Input('type') type: string;\n  @HostBinding('style.width') itemWidth;\n  @HostBinding('style.height') itemHeight;\n  @HostBinding('attr.public-id') publicId;\n\n  options: object = {};\n  placeholderImg: string;\n\n  constructor(private cloudinary: Cloudinary) {}\n\n  setWidth(width) {\n    this.itemWidth = width;\n  }\n\n  setHeight(height) {\n    this.itemHeight = height;\n  }\n\n  setPublicId(id) {\n    this.publicId = id;\n  }\n\n  ngAfterContentChecked() {\n    this.placeholderImg = this.getPlaceholderImage();\n  }\n\n  getPlaceholderImage() {\n    if (this.type === 'predominant-color' && this.itemHeight && this.itemWidth) {\n      return this.cloudinary.url(this.publicId, {transformation: [this.options, ...predominantColorTransformPxl]});\n    } else {\n      return this.cloudinary.url(this.publicId, {transformation: [this.options, ...placeholderImageOptions[this.type] || placeholderImageOptions['blur']]})\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ContentChildren,\n  QueryList,\n  AfterViewInit,\n  AfterContentChecked,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  ContentChild,\n} from '@angular/core';\nimport { Cloudinary } from './cloudinary.service';\nimport { CloudinaryTransformationDirective } from './cloudinary-transformation.directive';\nimport { CloudinaryPlaceHolder } from './cloudinary-placeholder.component';\nimport { isBrowser } from './cloudinary.service';\nimport { accessibilityEffect } from './constants';\n\n@Component({\n  selector: 'cl-image',\n  template: `<img [ngStyle]=\"{opacity: shouldShowPlaceHolder ? '0' : '1', position: shouldShowPlaceHolder ? 'absolute' : 'unset'}\"(load)=\"hasLoaded()\">\n  <div [style.display]=\"shouldShowPlaceHolder ? 'inline' : 'none'\">\n      <ng-content></ng-content>\n  </div>\n  `,\n})\nexport class CloudinaryImage\n  implements AfterViewInit, OnInit, AfterViewInit, AfterContentChecked, OnChanges, OnDestroy {\n  @Input('public-id') publicId: string;\n  @Input('client-hints') clientHints?: boolean;\n  @Input('loading') loading: string;\n  @Input('width') width?: string;\n  @Input('height') height?: string;\n  @Input('accessibility') accessibility?: string;\n\n  @ContentChildren(CloudinaryTransformationDirective)\n  transformations: QueryList<CloudinaryTransformationDirective>;\n  @ContentChild(CloudinaryPlaceHolder) placeholderComponent: CloudinaryPlaceHolder;\n\n  @Output() onLoad: EventEmitter<boolean> = new EventEmitter(); // Callback when an image is loaded successfully\n  @Output() onError: EventEmitter<boolean> = new EventEmitter(); // Callback when an image is loaded with error\n\n  observer: MutationObserver;\n  shouldShowPlaceHolder = true;\n  options: object = {};\n\n  constructor(private el: ElementRef, private cloudinary: Cloudinary) {}\n\n  ngOnInit(): void {\n    if (isBrowser()) {\n      // Create an observer instance\n      this.observer = new MutationObserver(() => {\n        this.loadImage();\n      });\n      // Observe changes to attributes or child transformations to re-render the image\n      const config = { attributes: true, childList: true };\n\n      // pass in the target node, as well as the observer options\n      this.observer.observe(this.el.nativeElement, config);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Listen to changes on the data-bound property 'publicId'.\n    // Update component unless this is the first value assigned.\n    if (changes.publicId && !changes.publicId.isFirstChange()) {\n      this.loadImage();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.observer && this.observer.disconnect) {\n      this.observer.disconnect();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.loadImage();\n  }\n\n  ngAfterContentChecked() {\n    if (this.width && this.placeholderComponent) {\n      this.placeholderComponent.setWidth(this.width);\n    }\n    if (this.height && this.placeholderComponent) {\n      this.placeholderComponent.setHeight(this.height);\n    }\n    if (this.placeholderComponent) {\n      this.placeholderComponent.setPublicId(this.publicId);\n    }\n  }\n\n  hasLoaded() {\n    this.shouldShowPlaceHolder = false;\n  }\n\n  loadImage() {\n    // https://github.com/angular/universal#universal-gotchas\n    // Fetch the image only for client side rendering by the browser\n    if (isBrowser()) {\n      if (!this.publicId) {\n        throw new Error(\n          'You must set the public id of the image to load, e.g. <cl-image public-id={{photo.public_id}}...></cl-image>'\n        );\n      }\n      const nativeElement = this.el.nativeElement;\n      const image = nativeElement.children[0];\n      // Add onload and onerror handlers\n      image.onload = e => {\n        this.onLoad.emit(e);\n      };\n      image.onerror = e => {\n        this.onError.emit(e);\n      };\n      const options = this.cloudinary.toCloudinaryAttributes(\n        nativeElement.attributes,\n        this.transformations\n      );\n      if (this.clientHints || (typeof this.clientHints === 'undefined' && this.cloudinary.config().client_hints)) {\n        delete options['class'];\n        delete options['data-src'];\n        delete options['responsive'];\n      }\n      if (this.placeholderComponent) {\n        this.placeholderHandler(options);\n      }\n      if (this.accessibility) {\n        this.options = options;\n        options.src = this.accessibilityModeHandler();\n      }\n      const imageTag = this.cloudinary.imageTag(this.publicId, options);\n\n      this.setElementAttributes(image, imageTag.attributes());\n      if (options.responsive) {\n        this.cloudinary.responsive(image, options);\n      }\n    }\n  }\n\n  setElementAttributes(element, attributesLiteral) {\n    Object.keys(attributesLiteral).forEach(attrName => {\n      const attr = attrName === 'src' && this.loading === 'lazy' ? 'data-src' : attrName;\n      element.setAttribute(attr, attributesLiteral[attrName]);\n    });\n  }\n\n  placeholderHandler(options) {\n    const placeholderOptions = {};\n\n    Object.keys(options).forEach(name => {\n      placeholderOptions[name] = (name === 'width' && !options[name].startsWith('auto') || name === 'height') ? Math.ceil(parseInt(options[name], 10) * 0.1) : options[name];\n    });\n    this.placeholderComponent.options = placeholderOptions;\n  }\n\n  accessibilityModeHandler() {\n    return this.cloudinary.url(this.publicId, {transformation: [this.options, accessibilityEffect[this.accessibility]]});\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  ContentChildren,\n  QueryList,\n  AfterViewInit,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  PLATFORM_ID,\n  Inject,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Cloudinary } from './cloudinary.service';\nimport { CloudinaryTransformationDirective } from './cloudinary-transformation.directive';\n\n@Component({\n  selector: 'cl-video',\n  template: '<video></video>'\n})\n// See also video reference - http://cloudinary.com/documentation/video_manipulation_and_delivery#video_transformations_reference\nexport class CloudinaryVideo\n  implements AfterViewInit, OnInit, OnChanges, OnDestroy {\n  @Input('public-id') publicId: string;\n\n  @ContentChildren(CloudinaryTransformationDirective)\n  transformations: QueryList<CloudinaryTransformationDirective>;\n\n  observer: MutationObserver;\n\n  constructor(private el: ElementRef, private cloudinary: Cloudinary, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  ngOnInit(): void {\n    if (typeof MutationObserver !== 'undefined') {\n      // Create an observer instance\n      this.observer = new MutationObserver(() => {\n        this.loadVideo(this.publicId);\n      });\n      // Observe changes to attributes or child transformations to re-render the image\n      const config = { attributes: true, childList: true };\n\n      // pass in the target node, as well as the observer options\n      this.observer.observe(this.el.nativeElement, config);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Listen to changes on the data-bound property 'publicId'.\n    // Update component unless this is the first value assigned.\n    if (changes.publicId && !changes.publicId.isFirstChange()) {\n      this.loadVideo(changes.publicId.currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.observer && this.observer.disconnect) {\n      this.observer.disconnect();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!this.publicId) {\n      throw new Error(\n        'You must set the public id of the video to load, e.g. <cl-video public-id={{video.public_id}}...></cl-video>'\n      );\n    }\n    this.loadVideo(this.publicId);\n  }\n\n  loadVideo(publicId: string) {\n    // https://github.com/angular/universal#universal-gotchas\n    if (isPlatformBrowser(this.platformId)) {\n      const nativeElement = this.el.nativeElement;\n      const video = nativeElement.children[0];\n      const options = this.cloudinary.toCloudinaryAttributes(\n        nativeElement.attributes,\n        this.transformations\n      );\n\n      const videoTag = this.cloudinary.videoTag(publicId, options);\n\n      // Replace template with the custom video tag created by Cloudinary\n      this.appendSourceElements(video, videoTag.content());\n      // Add attributes\n      this.setElementAttributes(video, videoTag.attributes());\n    }\n  }\n\n  setElementAttributes(element, attributesLiteral) {\n    Object.keys(attributesLiteral).forEach(attrName => {\n      element.setAttribute(attrName, attributesLiteral[attrName]);\n    });\n  }\n\n  appendSourceElements(element, html) {\n    const fragment = document.createDocumentFragment();\n    element.innerHTML = html;\n\n    while (element.childNodes[0]) {\n      fragment.appendChild(element.childNodes[0]);\n    }\n    element.appendChild(fragment);\n  }\n}\n","import {Directive, ElementRef, AfterViewInit, Input, QueryList, ContentChildren} from '@angular/core';\nimport {Cloudinary} from './cloudinary.service';\nimport {CloudinaryTransformationDirective} from './cloudinary-transformation.directive';\nimport { isBrowser } from './cloudinary.service';\n\n@Directive({\n    selector: '[clHref], [clSrc], [clSrcset]'\n})\nexport class CloudinaryImageSourceDirective implements AfterViewInit {\n\n    @Input() clHref: string;\n    @Input() clSrc: string;\n    @Input() clSrcset: string;\n\n    @ContentChildren(CloudinaryTransformationDirective)\n    transformations: QueryList<CloudinaryTransformationDirective>;\n\n    constructor(private el: ElementRef, private cloudinary: Cloudinary) {\n    }\n\n    ngAfterViewInit() {\n      if (isBrowser()) {\n        let attrName: string;\n        let propertyValue: string;\n        if (this.clHref) {\n            attrName = 'href';\n            propertyValue = this.clHref;\n        } else if (this.clSrc) {\n            attrName = 'src';\n            propertyValue = this.clSrc;\n        } else if (this.clSrcset) {\n            attrName = 'srcset';\n            propertyValue = this.clSrcset;\n        }\n\n        let isSvg = false;\n\n        if (this.clHref &&\n            toString.call(this.el.nativeElement['href'] === '[object SVGAnimatedString]')) {\n            this.el.nativeElement.setAttribute('xlinkHref', 'xlink:href');\n            isSvg = true;\n        }\n\n        if (!attrName || !propertyValue) {\n            throw new Error('Directive value is missing for clHref/clSrc/clSrcset');\n        }\n\n        const nativeElement = this.el.nativeElement;\n        const options = this.cloudinary.toCloudinaryAttributes(nativeElement.attributes, this.transformations);\n\n        const attrValue = this.cloudinary.url(propertyValue, options);\n        this.el.nativeElement.setAttribute(attrName, attrValue);\n\n        /*\n         on IE, if \"ngSrc\" directive declaration is used and \"src\" attribute doesn't exist\n         then calling element.setAttribute('src', 'foo') doesn't do anything, so we need\n         to set the property as well to achieve the desired effect.\n\n         Check for IE: http://stackoverflow.com/a/32139375/198095\n         if is IE then documentMode contains IE version\n         */\n        const msie = this.el.nativeElement.ownerDocument.documentMode;\n        if (msie && !isSvg) {\n            // IE logic here\n            this.el.nativeElement[attrName] = attrValue;\n        }\n      }\n    };\n}\n","import {Directive, ElementRef, Renderer2, AfterViewInit, Input, QueryList, ContentChildren} from '@angular/core';\nimport {Cloudinary} from './cloudinary.service';\nimport {CloudinaryTransformationDirective} from './cloudinary-transformation.directive';\n\n@Directive({\n    selector: '[clBackgroundImage]'\n})\nexport class CloudinaryBackgroundImageDirective implements AfterViewInit {\n\n    @Input() clBackgroundImage: string;\n\n    @ContentChildren(CloudinaryTransformationDirective)\n    transformations: QueryList<CloudinaryTransformationDirective>;\n\n    constructor(private renderer: Renderer2, private el: ElementRef, private cloudinary: Cloudinary) {\n    }\n\n    isBrowser(): boolean {\n      return typeof window !== 'undefined';\n    }\n\n    ngAfterViewInit() {\n      if (this.isBrowser()) {\n        const nativeElement = this.el.nativeElement;\n        const options = this.cloudinary.toCloudinaryAttributes(nativeElement.attributes, this.transformations);\n        const imageUrl = this.cloudinary.url(this.clBackgroundImage, options);\n        this.renderer.setStyle(nativeElement, 'background-image', `url('${imageUrl}')`);\n        this.renderer.setStyle(nativeElement, 'background-repeat', 'no-repeat');\n        this.renderer.setStyle(nativeElement, 'background-position', 'center');\n      }\n  }\n}\n","import {AfterViewInit, Directive, ElementRef} from '@angular/core';\n\n\n@Directive({\n  selector: 'cl-image[loading=lazy]'\n})\nexport class LazyLoadDirective implements AfterViewInit {\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit() {\n      if (!this.isNativeLazyLoadSupported() && this.isLazyLoadSupported()) {\n        this.lazyLoad();\n      } else {\n        this.loadImage();\n      }\n  }\n\n  loadImage() {\n    const nativeElement = this.el.nativeElement;\n    const image = nativeElement.children[0];\n    image.setAttribute('src', image.dataset.src);\n  }\n\n  isLazyLoadSupported() {\n    return window && 'IntersectionObserver' in window;\n  }\n\n  isNativeLazyLoadSupported() {\n    return 'loading' in HTMLImageElement.prototype; // check loading property is defined on image or iframe\n  }\n\n  lazyLoad() {\n    const options = {\n      rootMargin: `0px 0px -50% 0px`, // Margin around the root\n    };\n    const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            this.loadImage();\n            observer.unobserve(entry.target);\n          }\n        }, options);\n      });\n    observer.observe(this.el.nativeElement);\n  }\n}\n","'use strict';\n/* App Module */\nimport { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Cloudinary } from './cloudinary.service';\nimport { CloudinaryImage } from './cloudinary-image.component';\nimport { CloudinaryVideo } from './cloudinary-video.component';\nimport { CloudinaryTransformationDirective } from './cloudinary-transformation.directive';\nimport { CloudinaryImageSourceDirective } from './cloudinary-image-source.directive';\nimport { CloudinaryBackgroundImageDirective } from './cloudinary-background-image.directive';\nimport CloudinaryConfiguration from './cloudinary-configuration.class';\nimport { LazyLoadDirective } from './cloudinary-lazy-load.directive';\nimport { CloudinaryPlaceHolder } from './cloudinary-placeholder.component';\n\n// Export for lib consumers\nexport { CloudinaryImage } from './cloudinary-image.component';\nexport { CloudinaryVideo } from './cloudinary-video.component';\nexport { CloudinaryTransformationDirective } from './cloudinary-transformation.directive';\nexport { CloudinaryImageSourceDirective } from './cloudinary-image-source.directive';\nexport { CloudinaryBackgroundImageDirective } from './cloudinary-background-image.directive';\nexport { LazyLoadDirective } from './cloudinary-lazy-load.directive';\nexport { CloudinaryPlaceHolder } from'./cloudinary-placeholder.component';\n\n\nexport { Cloudinary, provideCloudinary } from './cloudinary.service';\n\nexport { CloudinaryConfiguration };\n\nexport const CLOUDINARY_LIB = new InjectionToken('CLOUDINARY_LIB');\nexport const CLOUDINARY_CONFIGURATION = new InjectionToken('CLOUDINARY_CONFIGURATION');\n\n// Export this function to Angular's AOT to work\nexport function createCloudinary(cloudinaryJsLib: object, configuration: CloudinaryConfiguration) {\n  return new Cloudinary(cloudinaryJsLib, configuration);\n};\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    CloudinaryImageSourceDirective,\n    CloudinaryBackgroundImageDirective,\n    CloudinaryImage,\n    CloudinaryVideo,\n    CloudinaryTransformationDirective,\n    LazyLoadDirective,\n    CloudinaryPlaceHolder,\n  ],\n  exports: [\n    CloudinaryImageSourceDirective,\n    CloudinaryBackgroundImageDirective,\n    CloudinaryImage,\n    CloudinaryVideo,\n    CloudinaryTransformationDirective,\n    LazyLoadDirective,\n    CloudinaryPlaceHolder\n  ]\n})\nexport class CloudinaryModule {\n  static forRoot(cloudinaryJsLib: object, cloudinaryConfiguration: CloudinaryConfiguration): ModuleWithProviders<CloudinaryModule> {\n    return {\n      ngModule: CloudinaryModule,\n      providers: [\n        { provide: CLOUDINARY_LIB, useValue: cloudinaryJsLib },\n        { provide: CLOUDINARY_CONFIGURATION, useValue: cloudinaryConfiguration },\n        {\n          provide: Cloudinary,\n          useFactory: createCloudinary,\n          deps: [CLOUDINARY_LIB, CLOUDINARY_CONFIGURATION]\n        }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
